# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'serum_hp.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QEventLoop, QTimer
from PyQt5.QtWidgets import QApplication, QMainWindow, QFileDialog, QWidget
from PyQt5 import QtCore, QtGui, QtWidgets
import visual_curve
import MSCNN


# 实现将控制台print结果输出到界面
class EmittingStr(QtCore.QObject):
    textWritten = QtCore.pyqtSignal(str)  # 定义一个发送str的信号

    def write(self, text):
        self.textWritten.emit(str(text))
        # 使得结果一行一行输出
        loop = QEventLoop()
        QTimer.singleShot(1000, loop.quit)
        loop.exec_()

    def flush(self):  # real signature unknown; restored from __doc__
        """ flush(self) """
        pass


# 重写QLanel功能，是得label具有单机事件
class MyQLabel(QtWidgets.QLabel):
    # 自定义信号, 注意信号必须为类属性
    button_clicked_signal = QtCore.pyqtSignal()

    def __init__(self, parent=None):
        super(MyQLabel, self).__init__(parent)

    def mouseReleaseEvent(self, QMouseEvent):
        self.button_clicked_signal.emit()

    # 可在外部与槽函数连接
    def connect_customized_slot(self, func):
        self.button_clicked_signal.connect(func)


########################################################################################################################
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1232, 847)
        font = QtGui.QFont()
        font.setPointSize(5)
        Form.setFont(font)
        Form.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(100, 70, 1031, 711))
        self.frame.setStyleSheet("*{background-color: rgba(255, 255, 255, 255);\n"
"    border:3px solid rgba(0, 0, 0, 255);;}")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.label_background_up = QtWidgets.QLabel(self.frame)
        self.label_background_up.setGeometry(QtCore.QRect(0, 0, 1031, 411))
        self.label_background_up.setStyleSheet("background-color: rgb(255, 255, 255,0.5);")
        self.label_background_up.setText("")
        self.label_background_up.setObjectName("label_background_up")
        self.label_spectrum = QtWidgets.QLabel(self.frame)
        self.label_spectrum.setGeometry(QtCore.QRect(5, 415, 641, 291))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(30)
        font.setBold(True)
        font.setWeight(75)
        self.label_spectrum.setFont(font)
        self.label_spectrum.setStyleSheet("background-color: rgb(255, 255, 255,0.5);\n"
"color: rgb(198, 198, 198,0.5);")
        self.label_spectrum.setAlignment(QtCore.Qt.AlignCenter)
        self.label_spectrum.setObjectName("label_spectrum")
        self.textEdit_result = QtWidgets.QTextEdit(self.frame)
        self.textEdit_result.setGeometry(QtCore.QRect(650, 415, 374, 291))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.textEdit_result.setFont(font)
        self.textEdit_result.setStyleSheet("background-color: rgb(255, 255, 255,0.5);")
        self.textEdit_result.setDocumentTitle("")
        self.textEdit_result.setLineWrapColumnOrWidth(0)
        self.textEdit_result.setPlaceholderText("")
        self.textEdit_result.setObjectName("textEdit_result")
        self.lineEdit_inputfile = QtWidgets.QLineEdit(self.frame)
        self.lineEdit_inputfile.setGeometry(QtCore.QRect(70, 120, 721, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.lineEdit_inputfile.setFont(font)
        self.lineEdit_inputfile.setAccessibleName("")
        self.lineEdit_inputfile.setAccessibleDescription("")
        self.lineEdit_inputfile.setStyleSheet("border-color: rgb(255, 255, 255);")
        self.lineEdit_inputfile.setObjectName("lineEdit_inputfile")
        self.pushButton_open = QtWidgets.QPushButton(self.frame)
        self.pushButton_open.setGeometry(QtCore.QRect(830, 120, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_open.setFont(font)
        self.pushButton_open.setStyleSheet("QPushButton {\n"
"    color: rgb(255, 255, 255);\n"
"    border: 0px;\n"
"    background-color: rgb(19, 64, 136);\n"
"    border-radius: 5px;    \n"
"}\n"
"QPushButton:hover {\n"
"    border: 0px;\n"
"    background-color: rgb(76, 171, 255);\n"
"}\n"
"QPushButton:pressed, QPushButton:checked {    \n"
"    border: 0px;\n"
"    background-color: rgb(76, 171, 255);    \n"
"}")
        self.pushButton_open.setObjectName("pushButton_open")
        self.pushButton_run = QtWidgets.QPushButton(self.frame)
        self.pushButton_run.setGeometry(QtCore.QRect(360, 240, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(True)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.pushButton_run.setFont(font)
        self.pushButton_run.setStyleSheet("QPushButton {\n"
"    color: rgb(255, 255, 255);\n"
"    border: 0px;\n"
"    background-color: rgb(19, 64, 136);\n"
"    border-radius: 5px;    \n"
"}\n"
"QPushButton:hover {\n"
"    border: 0px;\n"
"    background-color: rgb(76, 171, 255);\n"
"}\n"
"QPushButton:pressed, QPushButton:checked {    \n"
"    border: 0px;\n"
"    background-color: rgb(76, 171, 255);    \n"
"}")
        self.pushButton_run.setObjectName("pushButton_run")
        self.label_background = QtWidgets.QLabel(self.frame)
        self.label_background.setGeometry(QtCore.QRect(0, 0, 1031, 711))
        self.label_background.setText("")
        self.label_background.setPixmap(QtGui.QPixmap("backgoroud.jpg"))
        self.label_background.setScaledContents(True)
        self.label_background.setObjectName("label_background")
        self.label_title = QtWidgets.QLabel(self.frame)
        self.label_title.setGeometry(QtCore.QRect(0, 0, 1031, 81))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(22)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setStyleSheet("background-color: rgb(255, 255, 255,0);\n"
"border-color: rgb(255, 255, 255,0);\n"
"color: rgb(255, 255, 127);")
        self.label_title.setAlignment(QtCore.Qt.AlignCenter)
        self.label_title.setObjectName("label_title")
        self.label_tip = QtWidgets.QLabel(self.frame)
        self.label_tip.setGeometry(QtCore.QRect(70, 180, 201, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        self.label_tip.setFont(font)
        self.label_tip.setStyleSheet("background-color: rgb(255, 255, 255,0);\n"
"border-color: rgb(255, 255, 255,0);")
        self.label_tip.setObjectName("label_tip")
        self.label_tip1 = QtWidgets.QLabel(self.frame)
        self.label_tip1.setGeometry(QtCore.QRect(260, 179, 81, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_tip1.setFont(font)
        self.label_tip1.setStyleSheet("background-color: rgb(255, 255, 255,0);\n"
"color: rgb(85, 85, 255);\n"
"border-color: rgb(255, 255, 255,0);")
        self.label_tip1.setObjectName("label_tip1")
        self.label_background.raise_()
        self.label_background_up.raise_()
        self.label_spectrum.raise_()
        self.textEdit_result.raise_()
        self.lineEdit_inputfile.raise_()
        self.pushButton_open.raise_()
        self.pushButton_run.raise_()
        self.label_title.raise_()
        self.label_tip.raise_()
        self.label_tip1.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_spectrum.setText(_translate("Form", "Average Raman Spectrum"))
        self.lineEdit_inputfile.setPlaceholderText(_translate("Form", "Input file (.csv)"))
        self.pushButton_open.setText(_translate("Form", "OPEN"))
        self.pushButton_run.setText(_translate("Form", "RUN"))
        self.label_title.setText(_translate("Form", "Welcome to Use H.pylori Serum Antibody Analysis Software !"))
        self.label_tip.setText(_translate("Form", "The inputfile format is shown in "))
        self.label_tip1.setText(_translate("Form", "demo.csv"))

########################################################################################################################
        self.pushButton_open.clicked.connect(self.get_save)
        self.pushButton_open.clicked.connect(self.call_vsraw)
        self.pushButton_run.clicked.connect(self.load_MSCNN)
########################################################################################################################

# 函数功能
    def outputWritten(self, text):
        # self.textEdit.clear()
        cursor = self.textEdit_result.textCursor()
        cursor.movePosition(QtGui.QTextCursor.End)
        cursor.insertText(text)
        self.textEdit_result.setTextCursor(cursor)
        self.textEdit_result.ensureCursorVisible()

    def get_save(self):
        self.filename, _ = QFileDialog.getOpenFileName(None, 'Single File', '.', '*.csv')
        if self.filename == '':
            pass
        else:
            self.lineEdit_inputfile.setText(self.filename)
            self.filename1 = self.lineEdit_inputfile.text()
            if len(self.filename1) != 0:
                sys.stdout = EmittingStr(textWritten=self.outputWritten)
                sys.stderr = EmittingStr(textWritten=self.outputWritten)

    def call_vsraw(self):
        if self.filename == '':
            pass
        else:
            self.label_spectrum.clear()
            visual_curve.vsraw(self.filename)
            self.label_spectrum.setPixmap(QtGui.QPixmap('AVG_Peaks.png'))

    def load_MSCNN(self):
        if self.lineEdit_inputfile.text() == '':
            pass
        else:
            self.textEdit_result.setReadOnly(True)
            self.textEdit_result.setReadOnly(True)
            self.textEdit_result.clear()
            MSCNN.MSCNN_pre(self.filename1)


if __name__ == '__main__':
    import sys
    app = QApplication(sys.argv)
    MainWindow = QWidget()
    ui = Ui_Form()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
